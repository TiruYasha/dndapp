# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - pixiprototype

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
        - task: Npm@1
          inputs:
            command: 'install'
            workingDir: 'pixiprototype'
        - task: Npm@1
          inputs:
            command: 'custom'
            workingDir: 'pixiprototype'
            customCommand: 'run build:prod --prod'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: 'pixiprototype/dist'

            ArtifactName: 'pixiprototype'
            publishLocation: 'Container'
- stage: deploy_dev
  displayName: Deploy to development
  dependsOn:
    - build
  variables:
  - group: DEV
  jobs:
    - job: waitForValidation
      displayName: Wait for external validation  
      pool: server    
      timeoutInMinutes: 4320 # job times out in 3 days
      steps:   
        - task: ManualValidation@0
          timeoutInMinutes: 1440 # task times out in 1 day
          inputs:
            notifyUsers: 'renebuunk1996@gmail.com'
            instructions: 'Please validate the build configuration and resume'
    - deployment: DeployWeb
      environment: DEV
      strategy:
        runOnce:
          deploy:
            steps:
              - script: echo Hello, development world!
           
              - task: replacetokens@3
                inputs:
                  targetFiles: '../pixiprototype/**/main*.js'
                  encoding: 'auto'
                  writeBOM: true
                  verbosity: 'detailed'
                  actionOnMissing: 'warn'
                  keepToken: false
                  tokenPrefix: '#{'
                  tokenSuffix: '}#'
                  useLegacyPattern: false
                  enableTelemetry: true
              - task: CopyFilesOverSSH@0
                inputs:
                  sshEndpoint: 'DigitalOceanDndApp'
                  sourceFolder: '../pixiprototype/pixiprototype'
                  contents: '**'
                  targetFolder: '/home/dndapp/www'
                  readyTimeout: '20000'